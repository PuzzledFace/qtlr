% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{fitBinaryModel}
\alias{fitBinaryModel}
\title{Fit a binary QTL model.}
\usage{
fitBinaryModel(r, g, inits = list(list(a = 2, b = 4), list(a = 9, b =
  1)), modelString = NULL, autoRun = TRUE, raw = FALSE, ...)
}
\arguments{
\item{r}{the vector holding the response status of this observation}

\item{g}{the vector holding the group ID for this observation}

\item{inits}{a list containing the initial values of the hyperparameters.
See Usage Notes below.}

\item{modelString}{The JAGS model string that defines the model to be fitted}

\item{autoRun}{Logical.  If \code{TRUE}, use \code{autorun.jags}.  Otherwise,
use \code{run.jags}.}

\item{raw}{logical if \code{TRUE}, the \code{mcmc} object created by
 JAGS is returned.  Otherwise, a \code{tibble} containing the
concatenation of elements of the \code{mcmc.list} created by JAGS
is returned}

\item{...}{passed to JAGS}
}
\value{
Either the \code{mcmc} (or \code{mcmc.list}) object returned by
JAGS or a tibble containing the MCMC samples from the posterior
distribution
}
\description{
Fit a binary QTL model.
}
\section{Usage notes}{

If \code{modelString == NULL}, the model string is obtained by calling
\code{getModelString("binary")}.\cr\cr  
If \code{raw == FALSE}, the chain from which each observation is drawn is
indicated by \code{Chain} and the dataset is transformed into tidy format,
with the model parameter indicated by \code{Parameter}.\cr\cr  
The \code{inits} parameter can be used to define the number of chains created
by JAGS.  If a list of lists, the number of elements in the
outer list defines the number of chains and the elements of each sub-list
define the initial value for each hyperparameter.  For example, the default
value of \code{inits} requests two chains.  The initial values of \code{a}
 and \code{b} in the first chain are 2 and 4, respectively.  In the second
chain, the corresponding values are 9 and 1.  If the MCMC model has converged
and is stationary, the initial values of the hyperparameters will be
irrelevant.   To check for convergence, it is necessary - but not sufficient
- to obtain more than one chain and to use different initial values for each
chain.\cr\cr
Note that some parameters to \code{run.jags} are incompatible with 
\code{autorun.jags} and will therefor cause an error when passed in 
\code{...} unless \code{autoRun} is set to \code{FALSE}.  These parameters
include \code{samples} and \code{burnin} and will result in an error similar
to "Error in \code{extend.jags(runjags.object, add.monitor = add.monitor,
drop.monitor = drop.monitor,}  : formal argument "burnin" matched by multiple
actual arguments".
}

\examples{
#Simple use
b <- createBerryData(binary=TRUE) 
m <- fitBinaryModel(b$Event, b$Study) \%>\% dplyr::filter(Index == 10)
#Passing parameters to run.jags()
inits1 <- list(a=4, b=2)
inits2 <- list(a=1, b=1)
inits3 <- list(a=2, b=10)
m <- fitBinaryModel(b$Event, b$Study,
                    inits=list(inits1, inits2, inits3),
                    thin=2)
}
\seealso{
\code{\link{fitBinomialModel}}, \code{\link{fitPoissonModel}},
\code{\link{fitTteModel}}
}
